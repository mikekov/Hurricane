<UserControl x:Class="Hurricane.AppMainWindow.WindowSkins.WindowAdvancedView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
             xmlns:converter="clr-namespace:Hurricane.Extensions.Converter"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:extensions="clr-namespace:Hurricane.Extensions"
             xmlns:ctrl="clr-namespace:Hurricane.Extensions.ListViewLayoutManager"
             xmlns:userControls="clr-namespace:Hurricane.Views.UserControls"
             xmlns:track="clr-namespace:Hurricane.Music.Track"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="1000" DataContext="{x:Static viewmodels:MainViewModel.Instance}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/AdvancedTimelineSlider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/RoundButtons.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/FavoriteToggleButton.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/VectorMenuItem.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:FormatTimespan x:Key="FormatTimespan"/>
            <converter:CollapsedOnNullValue x:Key="CollapsedOnNullValue"/>
            <converter:FalseOnEmptyString x:Key="FalseOnEmptyString"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid MouseLeftButtonDown="Titlebar_MouseLeftButtonDown" MouseLeftButtonUp="Titlebar_MouseLeftButtonUp" MouseMove="Titlebar_OnMouseMove" Background="{StaticResource WhiteColorBrush}" Opacity="0.0"/>
            <TextBlock Text="Hurricane" Foreground="#FFAAAAAA" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False"/>
        </Grid>
        <TabControl Grid.Row="1" SelectedIndex="{Binding MainTabControlIndex}" controls:ControlsHelper.HeaderFontSize="13" controls:TabControlHelper.Transition="{Binding MySettings.Config.TabControlTransition}">
            <TabControl.Resources>
                <Style TargetType="TabItem" BasedOn="{StaticResource MetroTabItem}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding MySettings.Config.UseThinHeaders}" Value="True">
                            <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Light"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MySettings.Config.UseThinHeaders}" Value="False">
                            <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Normal"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TabControl.Resources>
            <TabItem Header="{DynamicResource Playlists}">
                <TabItem.Resources>
                    <DataTemplate x:Key="DragAdornerPlaylist">
                        <Grid Background="{StaticResource AccentColorBrush2}" Width="190" Height="25">
                            <TextBlock Text="{Binding}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="DragAdornerTrack">
                        <Grid Background="{StaticResource AccentColorBrush3}" Width="400" Height="40" Margin="1">
                            <StackPanel Orientation="Vertical" Margin="10,0,0,0" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Title}" Foreground="White"/>
                                <TextBlock Text="{Binding Artist}" Foreground="White"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </TabItem.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="230"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Menu Grid.ColumnSpan="3" Background="Transparent">
                        <MenuItem Header="{DynamicResource Playlist}" Background="Transparent">
                            <MenuItem Header="{DynamicResource NewPlaylist}" Command="{Binding AddNewPlaylist}"/>
                            <Separator />
                            <MenuItem Header="{DynamicResource RemovePlaylist}" Command="{Binding RemovePlaylist}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}"/>
                            <MenuItem Header="{DynamicResource RenamePlaylist}" Command="{Binding RenamePlaylist}"  IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}"/>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource Tracks}" Background="Transparent">
                            <MenuItem Header="{DynamicResource AddFiles}" Command="{Binding AddFilesToPlaylist}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}"/>
                            <MenuItem Header="{DynamicResource AddDirectories}" Command="{Binding AddFolderToPlaylist}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}"/>
                            <Separator />
                            <MenuItem Header="{DynamicResource DownloadAllStreams}" Command="{Binding DownloadAllStreams}" IsEnabled="{Binding MusicManager.SelectedPlaylist.ContainsDownloadableStreams}"/>
                            <Separator />
                            <MenuItem Header="{DynamicResource ReloadTrackInfo}" Command="{Binding ReloadTrackInformation}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}"/>
                            <MenuItem Header="{DynamicResource RemoveTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem Header="{DynamicResource RemoveMissingTracks}" Command="{Binding RemoveMissingTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.ContainsMissingTracks}"/>
                                <MenuItem Header="{DynamicResource RemoveDuplicates}" Command="{Binding RemoveDuplicateTracks}"/>
                                <Separator />
                                <MenuItem Header="{DynamicResource RemoveAllTracks}" Command="{Binding ClearSelectedPlaylist}"/>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource Favorites}" Command="{Binding MusicManager.Commands.OpenFavorites}" Background="Transparent"/>
                        <MenuItem Header="{DynamicResource Streams}" Command="{Binding OpenOnlineSection}" Background="Transparent"/>
                        <MenuItem Header="{DynamicResource Downloads}" Command="{Binding OpenDownloadManager}" Background="Transparent">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.DownloadManager.HasEntries}" Value="true">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </Menu>
                    <TextBox Grid.Column="3" Margin="0,0,10,0" x:Name="txtSearch" VerticalAlignment="Center" controls:TextBoxHelper.ClearTextButton="True" HorizontalAlignment="Right" Width="200" controls:TextBoxHelper.Watermark="{StaticResource Search}" Text="{Binding MusicManager.SelectedPlaylist.SearchText,UpdateSourceTrigger=PropertyChanged}"/>
                    <ListBox Grid.Row="1" DisplayMemberPath="Name" SelectedItem="{Binding MusicManager.SelectedPlaylist}" Margin="5" ItemsSource="{Binding MusicManager.Playlists}" Background="Transparent"
                             dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding PlaylistListDropHandler}" dd:DragDrop.DragAdornerTemplate="{StaticResource DragAdornerPlaylist}" dd:DragDrop.DefaultDragAdornerOpacity=".8">
                        <ListBox.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding RemovePlaylist}"/>
                        </ListBox.InputBindings>
                        <ListBox.Resources>
                            <ContextMenu x:Key="contexmenu">
                                <MenuItem Header="{DynamicResource RemovePlaylist}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=DataContext.RemovePlaylist}"/>
                                <MenuItem Header="{DynamicResource RenamePlaylist}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=DataContext.RenamePlaylist}"/>
                            </ContextMenu>
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MetroListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource contexmenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <Rectangle Grid.Column="1" Width="1" Fill="Gray" Grid.Row="1"/>
                    <Grid Grid.Column="2" Margin="5" x:Name="gridplaylist" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <extensions:AnimatedListView SelectionMode="Extended" ItemsSource="{Binding MusicManager.SelectedPlaylist.ViewSource}" SelectedItem="{Binding MusicManager.SelectedTrack}" BorderThickness="0" SelectionChanged="ListView_SelectionChanged" Background="Transparent"
                                  DragEnter="ListView_DragEnter" Drop="ListView_Drop" x:Name="TracksListView" ctrl:ListViewLayoutManager.Enabled="True" Style="{StaticResource VisualizingListView}" dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragAdornerTemplate="{StaticResource DragAdornerTrack}" dd:DragDrop.DropHandler="{Binding TrackListDropHandler}">
                                <ListView.Resources>
                                    <ContextMenu x:Key="FileContextMenu" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext}">
                                        <MenuItem Header="{DynamicResource Play}" Command="{Binding MusicManager.Commands.PlaySelectedTrack}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" InputGestureText="Enter"/>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource AddTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                            <MenuItem Header="{DynamicResource AddFiles}" Command="{Binding AddFilesToPlaylist}" InputGestureText="{DynamicResource Ins}"/>
                                            <MenuItem Header="{DynamicResource AddDirectories}" Command="{Binding AddFolderToPlaylist}" InputGestureText="{DynamicResource CtrlIns}"/>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource Queue}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}">
                                            <MenuItem Header="{DynamicResource AddToQueue}" Command="{Binding MusicManager.Commands.AddTracksToQueue}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=extensions:AnimatedListView},Path=SelectedItems}" InputGestureText="Q"/>
                                            <MenuItem Header="{DynamicResource RemoveFromQueue}" Command="{Binding MusicManager.Commands.RemoveFromQueue}" InputGestureText="Alt+Q"/>
                                            <MenuItem Header="{DynamicResource ClearQueue}" Command="{Binding MusicManager.Commands.ClearQueue}" IsEnabled="{Binding MusicManager.Queue.HasTracks}"/>
                                            <Separator />
                                            <MenuItem Header="{DynamicResource QueueManager}" Command="{Binding OpenQueueManager}" InputGestureText="{DynamicResource CtrlQ}"/>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource TrackInformation}" Command="{Binding OpenTrackInformation}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" InputGestureText="F4"/>
                                        <MenuItem Header="{DynamicResource TagEditor}" Command="{Binding OpenTagEditor}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" InputGestureText="F3"/>
                                        <MenuItem Header="{DynamicResource FileLocation}" Command="{Binding MusicManager.Commands.OpenTrackLocation}" InputGestureText="Alt+O" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}"/>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource Remove}" Command="{Binding RemoveSelectedTracks}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extensions:AnimatedListView}}, Path=SelectedItems}" InputGestureText="{DynamicResource Del}"/>
                                    </ContextMenu>
                                    <ContextMenu x:Key="StreamContextMenu">
                                        <MenuItem Header="{DynamicResource Play}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Commands.PlaySelectedTrack}" InputGestureText="Enter"/>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource AddTracks}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.SelectedPlaylist.CanEdit}">
                                            <MenuItem Header="{DynamicResource AddFiles}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.AddFilesToPlaylist}" InputGestureText="{DynamicResource Ins}"/>
                                            <MenuItem Header="{DynamicResource AddDirectories}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.AddFolderToPlaylist}" InputGestureText="{DynamicResource CtrlIns}"/>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource Queue}">
                                            <MenuItem Header="{DynamicResource AddToQueue}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Commands.AddTracksToQueue}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=SelectedItems}" InputGestureText="Q"/>
                                            <MenuItem Header="{DynamicResource RemoveFromQueue}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Commands.RemoveFromQueue}" InputGestureText="Alt+Q"/>
                                            <MenuItem Header="{DynamicResource ClearQueue}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Commands.ClearQueue}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Queue.HasTracks}"/>
                                            <Separator />
                                            <MenuItem Header="{DynamicResource QueueManager}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.OpenQueueManager}" InputGestureText="{DynamicResource CtrlQ}"/>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource TrackInformation}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.OpenTrackInformation}" InputGestureText="F4"/>
                                        <MenuItem Header="{DynamicResource Download}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Commands.DownloadTracks}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=SelectedItems}" IsEnabled="{Binding CanDownload}" InputGestureText="F3"/>
                                        <MenuItem Header="{DynamicResource OpenUrl}" Command="{Binding OpenLinkCommand}" InputGestureText="Alt+O"/>
                                        <MenuItem Header="{DynamicResource ConvertToLocalTrack}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConvertStreamToLocalTrack}">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding CanDownload}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource Remove}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.RemoveSelectedTracks}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}" InputGestureText="{DynamicResource Del}"/>
                                    </ContextMenu>
                                    <Style TargetType="TextBlock" x:Key="ListTextBlockStyle">
                                        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False"/>
                                                    <Condition Binding="{Binding IsOpened}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{StaticResource NormalColorBrush}"/>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="{x:Type GridViewColumnHeader}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                    <converter:TrueFalseValueConverter x:Key="TrueFalseValueConverter" FalseValue="#FFB4B4B4" TrueValue="White"/>
                                </ListView.Resources>
                                <ListView.InputBindings>
                                    <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracks}" CommandParameter="{Binding ElementName=TracksListView,Path=SelectedItems}"/>
                                    <KeyBinding Key="Enter" Command="{Binding MusicManager.Commands.PlaySelectedTrack}"/>
                                    <KeyBinding Key="O" Modifiers="Alt" Command="{Binding MusicManager.Commands.OpenTrackLocation}"/>
                                    <KeyBinding Key="Space" Command="{Binding MusicManager.Commands.TogglePlayPause}"/>
                                    <KeyBinding Key="Q" Command="{Binding MusicManager.Commands.AddTracksToQueue}" CommandParameter="{Binding ElementName=TracksListView,Path=SelectedItems}"/>
                                    <KeyBinding Key="Q" Modifiers="Alt" Command="{Binding MusicManager.Commands.RemoveFromQueue}"/>
                                    <KeyBinding Key="Q" Modifiers="Control" Command="{Binding OpenQueueManager}"/>
                                    <KeyBinding Key="Insert" Command="{Binding AddFilesToPlaylist}"/>
                                    <KeyBinding Key="Insert" Modifiers="Control" Command="{Binding AddFolderToPlaylist}"/>
                                    <KeyBinding Key="F4" Command="{Binding OpenTrackInformation}"/>
                                    <KeyBinding Key="F3" Command="{Binding OpenTagEditor}"/>
                                </ListView.InputBindings>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem" BasedOn="{StaticResource MetroListViewItem}">
                                        <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                                        <Setter Property="Padding" Value="0,4" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
                                        <Setter Property="Border.BorderBrush" Value="LightGray" />
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <ScaleTransform x:Name="transform" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TrackType}" Value="File">
                                                <Setter Property="ContextMenu" Value="{StaticResource FileContextMenu}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TrackType}" Value="Stream">
                                                <Setter Property="ContextMenu" Value="{StaticResource StreamContextMenu}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TrackExists}" Value="False">
                                                <Setter Property="Background" Value="{StaticResource GrayBrush8}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsRemoving}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation To="-40,0,40,0" Duration="0:0:0.5" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsAdded}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="-40,0,40,0" To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Margin" FillBehavior="Stop"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity" FillBehavior="Stop"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="27">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="5,0,0,0" Width="10">
                                                        <TextBlock Text="{Binding QueueID}" HorizontalAlignment="Center"/>
                                                        <!--We dont have to hide it because it gets automatically null-->
                                                        <Viewbox Width="12" Height="12">
                                                            <Path Data="{StaticResource VectorPlay}">
                                                                <Path.Style>
                                                                    <Style TargetType="Path">
                                                                        <Setter Property="Fill" Value="{StaticResource AccentColorBrush}"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                                <Setter Property="Fill" Value="White"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Path.Style>
                                                            </Path>
                                                            <Viewbox.Style>
                                                                <Style TargetType="Viewbox">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsOpened}" Value="True"/>
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.CSCoreEngine.IsPlaying}" Value="True"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                            <MultiDataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <ThicknessAnimation From="-5,0,5,0" To="0" Duration="0:0:0.4" Storyboard.TargetProperty="Margin"/>
                                                                                        <DoubleAnimation From="0.5" To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </MultiDataTrigger.EnterActions>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Viewbox.Style>
                                                        </Viewbox>
                                                        <Viewbox Width="12" Height="12">
                                                            <Path Data="{StaticResource VectorPause}"/>
                                                            <Viewbox.Resources>
                                                                <Style TargetType="Path">
                                                                    <Setter Property="Fill" Value="{StaticResource AccentColorBrush}"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                            <Setter Property="Fill" Value="White"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Viewbox.Resources>
                                                            <Viewbox.Style>
                                                                <Style TargetType="Viewbox">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsOpened}" Value="True"/>
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.CSCoreEngine.IsPlaying}" Value="False"/>
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.CSCoreEngine.IsLoading}" Value="False"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                            <MultiDataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation From="0.8" To="1" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </MultiDataTrigger.EnterActions>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Viewbox.Style>
                                                        </Viewbox>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn ctrl:ProportionalColumn.Width="1" Header="hallo">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid x:Name="Grid" Margin="10,0,0,0">
                                                        <TextBlock Text="{Binding DisplayText}" Style="{StaticResource ListTextBlockStyle}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ToggleButton Background="{StaticResource BlackBrush}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem},Path=IsSelected,Converter={StaticResource TrueFalseValueConverter}}" Style="{StaticResource FavoriteToggleButton}" Height="16" Width="16" HorizontalAlignment="Left" Margin="10,0,0,0" IsChecked="{Binding IsFavorite}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Duration}" Style="{StaticResource ListTextBlockStyle}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                <ListView.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Foreground="{StaticResource BlackBrush}" FontWeight="Bold" FontSize="14" Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ListView.GroupStyle>
                            </extensions:AnimatedListView>
                            <TextBlock extensions:AnimatedFrameworkElement.AnimationTrigger="{Binding MusicManager.SelectedPlaylist}" Visibility="{Binding MusicManager.SelectedPlaylist.ViewSource.IsEmpty,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{DynamicResource NoTracksFound}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" FontWeight="Light"/>
                        </Grid>
                        <userControls:EqualizerView Grid.Row="1" SliderThickness="10" ShowLabelBelowSlider="True" WantCloseCommand="{Binding CloseEqualizer}" ShowSeparator="True">
                            <userControls:EqualizerView.Style>
                                <Style TargetType="userControls:EqualizerView">
                                    <Setter Property="Height" Value="200"/>
                                    <Setter Property="Opacity" Value="0"/>
                                    <Setter Property="Margin" Value="0,0,0,-200"/>
                                    <Setter Property="IsHitTestVisible" Value="{Binding MySettings.CurrentState.EqualizerIsOpen}"/>
                                   <Style.Triggers>
                                        <DataTrigger Binding="{Binding MySettings.CurrentState.EqualizerIsOpen}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation To="0" Duration="0:0:0.3" Storyboard.TargetProperty="Margin"/>
                                                        <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation To="0,0,0,-200" Duration="0:0:0.3" Storyboard.TargetProperty="Margin"/>
                                                        <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </userControls:EqualizerView.Style>
                        </userControls:EqualizerView>
                    </Grid>
                    
                    <Grid Grid.Column="3" Grid.Row="1" x:Name="girdcover" Visibility="{Binding MusicManager.CSCoreEngine.CurrentTrack,Converter={StaticResource CollapsedOnNullValue}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding MusicManager.Commands.JumpToPlayingTrack}"/>
                        </Grid.InputBindings>
                        <Rectangle Width="1" Fill="Gray"/>
                        <StackPanel Orientation="Vertical" Margin="5" Grid.Column="1">
                            <extensions:TrackImagePreseter Track="{Binding MusicManager.CSCoreEngine.CurrentTrack}" Width="200" Height="200"/>
                            <ContentControl Content="{Binding MusicManager.CSCoreEngine.CurrentTrack}" Margin="10,10,0,0">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type track:LocalTrack}">
                                        <extensions:AnimatedStackPanel AnimationInterval="300" UpdateObject="{Binding RelativeSource={RelativeSource AncestorType=ContentControl},Path=DataContext.MusicManager.CSCoreEngine.CurrentTrack}" Orientation="Vertical">
                                            <TextBlock Text="{Binding Artist}" Foreground="{StaticResource NormalColorBrush}" TextWrapping="Wrap"/>
                                            <TextBlock FontSize="22" FontFamily="Segoe UI Light" Text="{Binding Title}" extensions:TextBlockHelper.PlaceHolderText="{DynamicResource NoArtist}" TextWrapping="Wrap"/>
                                            <ToggleButton Foreground="#FFB4B4B4" Background="{StaticResource NormalColorBrush}" Style="{StaticResource FavoriteToggleButton}" Height="16" Width="16" HorizontalAlignment="Left" Margin="0,10,0,10" IsChecked="{Binding IsFavorite}"/>
                                            <StackPanel Orientation="Horizontal" Margin="0,30,0,0">
                                                <TextBlock Text="{DynamicResource Bitrate}"/>
                                                <TextBlock Text="{Binding kbps}" Foreground="{StaticResource NormalColorBrush}" Margin="5,0,0,0"/>
                                                <TextBlock Text=" kbps" Foreground="{StaticResource NormalColorBrush}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                                <TextBlock Text="{DynamicResource Samplerate}"/>
                                                <TextBlock Text="{Binding kHz}" Foreground="{StaticResource NormalColorBrush}" Margin="5,0,0,0"/>
                                                <TextBlock Text=" kHz" Foreground="{StaticResource NormalColorBrush}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                                <TextBlock Text="{DynamicResource Format}"/>
                                                <TextBlock Text="{Binding Extension}" Foreground="{StaticResource NormalColorBrush}" Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </extensions:AnimatedStackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type track:StreamableBase}">
                                        <extensions:AnimatedStackPanel AnimationInterval="300" UpdateObject="{Binding RelativeSource={RelativeSource AncestorType=ContentControl},Path=DataContext.MusicManager.CSCoreEngine.CurrentTrack}" Orientation="Vertical">
                                            <TextBlock Text="{Binding Title}" Foreground="{StaticResource NormalColorBrush}" TextWrapping="Wrap"/>
                                            <TextBlock FontSize="22" FontFamily="Segoe UI Light" Text="{Binding Artist}" extensions:TextBlockHelper.PlaceHolderText="{DynamicResource NoArtist}" TextWrapping="Wrap"/>
                                            <ToggleButton Foreground="#FFB4B4B4" Background="{StaticResource NormalColorBrush}" Style="{StaticResource FavoriteToggleButton}" Height="16" Width="16" HorizontalAlignment="Left" Margin="0,10,0,10" IsChecked="{Binding IsFavorite}"/>
                                            <StackPanel Orientation="Horizontal" Margin="0,30,0,0">
                                                <TextBlock Text="{DynamicResource Uploader}"/>
                                                <TextBlock Text="{Binding Uploader}" Foreground="{StaticResource NormalColorBrush}" Margin="5,0,0,0"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                                <TextBlock Text="{DynamicResource Samplerate}"/>
                                                <TextBlock Text="{Binding kHz}" Foreground="{StaticResource NormalColorBrush}" Margin="5,0,0,0"/>
                                                <TextBlock Text=" kHz" Foreground="{StaticResource NormalColorBrush}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                                <TextBlock Text="{DynamicResource Platform}"/>
                                                <Viewbox Width="20" Height="20" Margin="10,0,0,0">
                                                    <ContentControl Content="{Binding}" Margin="5,0,0,0">
                                                        <ContentControl.Resources>
                                                            <DataTemplate DataType="{x:Type track:SoundCloudTrack}">
                                                                <Path Data="{Binding ProviderVector}" Fill="#FFFF3300"/>
                                                            </DataTemplate>
                                                            <DataTemplate DataType="{x:Type track:YouTubeTrack}">
                                                                <Path Data="{Binding ProviderVector}" Fill="{StaticResource BlackBrush}"/>
                                                            </DataTemplate>
                                                        </ContentControl.Resources>
                                                    </ContentControl>
                                                </Viewbox>
                                            </StackPanel>
                                        </extensions:AnimatedStackPanel>
                                    </DataTemplate>
                                </ContentControl.Resources>
                            </ContentControl>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource NowPlaying}">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="500"/>
                    </Grid.ColumnDefinitions>
                    <extensions:TrackImagePreseter Track="{Binding MusicManager.CSCoreEngine.CurrentTrack}" Width="280" Height="280" />
                    <Grid Grid.Column="2"  Margin="0,25,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <extensions:AnimatedStackPanel AnimationInterval="300" UpdateObject="{Binding MusicManager.CSCoreEngine.CurrentTrack}" Orientation="Vertical">
                            <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Artist}" Foreground="{StaticResource NormalColorBrush}" FontSize="14"/>
                            <TextBlock FontSize="32" Margin="0,5,0,0" FontFamily="Segoe UI Light" Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Title}" extensions:TextBlockHelper.PlaceHolderText="{DynamicResource NoArtist}" TextWrapping="Wrap"/>
                            <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Album}" Margin="0,5,0,0" FontSize="18" FontFamily="Segoe UI Light" Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <ToggleButton Foreground="#FFB4B4B4" Background="{StaticResource NormalColorBrush}" Style="{StaticResource FavoriteToggleButton}" Height="18" Width="18" HorizontalAlignment="Left" Margin="0,10,0,10" IsChecked="{Binding MusicManager.CSCoreEngine.CurrentTrack.IsFavorite}"/>
                        </extensions:AnimatedStackPanel>
                        <ContentControl Grid.Row="1" Height="100" VerticalAlignment="Bottom" Focusable="False" Margin="0,0,0,10" x:Name="AudioVisualisationContentControl" extensions:AudioVisualisationExtensions.AudioVisualisationForAdvancedWindow="{Binding MySettings.Config.ApplicationDesign.AudioVisualisation.AudioVisualisationPlugin}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Opacity" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation To="0" BeginTime="0:0:1" Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource Settings}">
                <userControls:SettingsView Margin="-5,0,0,0"/>
            </TabItem>
            <TabItem Header="Online" Visibility="Collapsed">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Margin="0,0,5,0" Width="100" SelectedIndex="{Binding MusicManager.DownloadManager.SelectedService}">
                            <ComboBox.Resources>
                                <CollectionViewSource Source="{Binding TrackSearcher.MusicApis}" x:Key="ApiCollectionView"/>
                            </ComboBox.Resources>
                            <ComboBox.ItemsSource>
                                <CompositeCollection>
                                    <ComboBoxItem Content="{DynamicResource All}"/>
                                    <CollectionContainer Collection="{Binding Source={StaticResource ApiCollectionView}}"/>
                                </CompositeCollection>
                            </ComboBox.ItemsSource>
                        </ComboBox>
                        <ComboBox Text="{Binding TrackSearcher.SearchText,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding MusicManager.DownloadManager.Searches}" IsEditable="True" controls:TextBoxHelper.ClearTextButton="True" Grid.Column="1" ToolTipService.ShowDuration="12000">
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding TrackSearcher.SearchCommand}"/>
                            </ComboBox.InputBindings>
                            <ComboBox.ToolTip>
                                <ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource AllowedInputs}" FontSize="14"/>
                                            <TextBlock Text=":" FontSize="14"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource Keyword}" FontWeight="Bold"/>
                                            <TextBlock Text=" - "/>
                                            <TextBlock Text="Eminem Beautiful" FontStyle="Italic"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource YouTubeVideoLink}" FontWeight="Bold"/>
                                            <TextBlock Text=" - "/>
                                            <TextBlock Text="https://www.youtube.com/watch?v=p7LdZ82kL7Q" FontStyle="Italic"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource YouTubePlaylistLink}" FontWeight="Bold"/>
                                            <TextBlock Text=" - "/>
                                            <TextBlock Text="https://www.youtube.com/playlist?list=PL55713C70BA91BD6E" FontStyle="Italic"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource SoundCloudLink}" FontWeight="Bold"/>
                                            <TextBlock Text=" - "/>
                                            <TextBlock Text="https://soundcloud.com/lensko/lensko-cetus" FontStyle="Italic"/>
                                        </StackPanel>
                                    </StackPanel>
                                </ToolTip>
                            </ComboBox.ToolTip>
                        </ComboBox>
                    </Grid>
                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Height="69" Margin="0,3,0,3">
                            <Grid.Resources>
                                <ContextMenu x:Key="contextMenu">
                                    <MenuItem Header="{DynamicResource AddToExistingPlaylist}" ItemsSource="{Binding MusicManager.Playlists}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
                                                <Setter Property="Header" Value="{Binding Name}"/>
                                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=DataContext.TrackSearcher.AddPlaylistToExisitingPlaylist}"/>
                                                <Setter Property="CommandParameter" Value="{Binding}"/>
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem Header="{DynamicResource CreateNewPlaylist}" Command="{Binding TrackSearcher.AddPlaylistToNewPlaylist}"/>
                                </ContextMenu>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource contextMenu}"/>
                                    <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TrackSearcher.PlaylistResult}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation To="{StaticResource Gray9}" Duration="0:0:0.2" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation To="{StaticResource WhiteColor}" Duration="0:0:0.2" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Image Source="{Binding TrackSearcher.PlaylistResult.Thumbnail}" Height="69" Stretch="UniformToFill" /><!-- The resolution of the image is 120x90 -->
                            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="10,0,0,0">
                                <TextBlock Text="{Binding TrackSearcher.PlaylistResult.Title}" FontSize="14"/>
                                <TextBlock Text="{Binding TrackSearcher.PlaylistResult.Uploader}" FontSize="12"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding TrackSearcher.PlaylistResult.TotalTracks}" FontSize="11"/>
                                    <TextBlock Text=" " FontSize="11"/>
                                    <TextBlock Text="{DynamicResource Tracks}" FontSize="11"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        <ListView ItemsSource="{Binding TrackSearcher.Results}" ctrl:ListViewLayoutManager.Enabled="True" Style="{StaticResource VisualizingListView}" SelectedItem="{Binding TrackSearcher.SelectedTrack}"
                                  extensions:GridViewSort.AutoSort="True" Grid.Row="1">
                            <ListView.Resources>
                                <converter:FormatLargeNumber x:Key="FormatLargeNumber"/>
                                <ContextMenu x:Key="ContextMenu">
                                    <MenuItem Header="{DynamicResource Play}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.TrackSearcher.PlaySelectedTrack}"/>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource AddToPlaylist}" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.Playlists}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
                                                <Setter Property="Header" Value="{Binding Name}"/>
                                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=DataContext.TrackSearcher.AddToPlaylist}"/>
                                                <Setter Property="CommandParameter" Value="{Binding}"/>
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem Header="{DynamicResource OpenUrl}" Command="{Binding OpenUrl}"/>
                                    <MenuItem Header="{DynamicResource Download}" IsEnabled="{Binding CanDownload}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=DataContext.TrackSearcher.DownloadTrack}"/>
                                </ContextMenu>
                                <Style TargetType="ToolTip" BasedOn="{StaticResource MetroToolTip}">
                                    <Setter Property="MaxWidth" Value="600" />
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}"  >
                                                    <ContentPresenter.Resources>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="TextWrapping" Value="Wrap" />
                                                        </Style>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource MetroListViewItem}">
                                    <Setter Property="extensions:ControlDoubleClick.Command" Value="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=DataContext.TrackSearcher.PlaySelectedTrack}"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Description,Converter={StaticResource FalseOnEmptyString}}" Value="true">
                                            <Setter Property="ToolTip" Value="{Binding Description}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="{DynamicResource Track}" ctrl:ProportionalColumn.Width="1" extensions:GridViewSort.PropertyName="Title">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <extensions:TrackImagePreseter Track="{Binding Representer,Mode=OneWay}" Height="55" Width="55" Margin="-4"/>
                                                    <StackPanel Orientation="Vertical" Grid.Column="1" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding Title}"/>
                                                        <TextBlock Text="{Binding Uploader}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="{DynamicResource Duration}" ctrl:FixedColumn.Width="100" Width="100" DisplayMemberBinding="{Binding Duration,Converter={StaticResource FormatTimespan}}" extensions:GridViewSort.PropertyName="Duration"/>
                                    <GridViewColumn Header="{DynamicResource Views}" ctrl:FixedColumn.Width="200" Width="200" extensions:GridViewSort.PropertyName="Views">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Views,Converter={StaticResource FormatLargeNumber}}" Margin="0,0,5,0"/>
                                                    <TextBlock Text="{DynamicResource Views}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="{DynamicResource Year}" ctrl:FixedColumn.Width="60" Width="60" extensions:GridViewSort.PropertyName="ReleaseYear">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Year}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Website" ctrl:FixedColumn.Width="80" Width="80" extensions:GridViewSort.PropertyName="ProviderName">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Viewbox Height="20" Width="20">
                                                    <Grid>
                                                        <Path Data="{Binding ProviderVector}">
                                                            <Path.Style>
                                                                <Style TargetType="Path">
                                                                   <Style.Triggers>
                                                                       <DataTrigger Binding="{Binding ProviderName}" Value="SoundCloud">
                                                                            <Setter Property="Fill" Value="#FFFF3300"/>
                                                                       </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ProviderName}" Value="YouTube">
                                                                            <Setter Property="Fill" Value="{StaticResource BlackBrush}"/>
                                                                        </DataTrigger>
                                                                       <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem},Path=IsSelected}" Value="True">
                                                                           <Setter Property="Fill" Value="White"/>
                                                                       </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Path.Style>
                                                        </Path>
                                                    </Grid>
                                                </Viewbox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <ProgressBar VerticalAlignment="Bottom" IsIndeterminate="{Binding TrackSearcher.IsLoading}" Visibility="{Binding TrackSearcher.IsLoading,Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="2"/>
                        <TextBlock Grid.RowSpan="2" Visibility="{Binding TrackSearcher.NothingFound,Converter={StaticResource BooleanToVisibilityConverter}}" Text="{DynamicResource NothingFound}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" FontWeight="Light"/>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid>
                <Slider Maximum="{Binding MusicManager.CSCoreEngine.TrackLength}" Value="{Binding MusicManager.CSCoreEngine.Position}" IsMoveToPointEnabled="True" extensions:SliderExtensions.MoveToPointOnDrag="True">
                    <Slider.Style>
                        <Style TargetType="Slider" BasedOn="{StaticResource AdvancedTimelineSlider}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsLoading}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </Slider>
                <Grid Background="{StaticResource GrayBrush10}" Height="5">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsLoading}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <controls:MetroProgressBar IsIndeterminate="{Binding MusicManager.CSCoreEngine.IsLoading}" Foreground="{StaticResource AccentColorBrush}"/>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,5,0,10">
                    <ToggleButton Height="32" Width="32" Background="White" Style="{StaticResource RoundToggleButton}" Margin="0,0,9,0" IsChecked="{Binding MusicManager.IsShuffleEnabled}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid>
                                    <Path Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Foreground}" Data="{StaticResource VectorShuffle}"/>
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </ToggleButton>
                    <Button Style="{StaticResource RoundButton}" Height="32" Width="32" Background="White" Command="{Binding MusicManager.Commands.GoBackward}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,1,0">
                                <Path Data="{StaticResource VectorFastBackward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button},Path=Foreground}"/>
                            </Viewbox>
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource RoundButton}" Width="45" Height="45" Command="{Binding MusicManager.Commands.TogglePlayPause}" Margin="9,0,9,0">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Viewbox Width="16" Height="16" Stretch="Uniform" Margin="3,0,0,0">
                                <Path Data="{StaticResource VectorPlay}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button},Path=Foreground}"/>
                                <Viewbox.Resources>
                                    <Style TargetType="{x:Type Viewbox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="Black"/>
                                    </Style>
                                </Viewbox.Resources>
                            </Viewbox>
                            <Viewbox Width="13" Height="15" Stretch="Fill">
                                <Path Data="{StaticResource VectorPause}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button},Path=Foreground}"/>
                                <Viewbox.Resources>
                                    <Style TargetType="{x:Type Viewbox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="Black"/>
                                    </Style>
                                </Viewbox.Resources>
                            </Viewbox>
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource RoundButton}" Height="32" Width="32" Background="White" Command="{Binding MusicManager.Commands.GoForward}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,0,0,0">
                                <Path Data="{StaticResource VectorFastForward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button},Path=Foreground}"/>
                            </Viewbox>
                        </Grid>
                    </Button>
                    <ToggleButton Height="32" Width="32" Background="White" Style="{StaticResource RoundToggleButton}" Margin="9,0,0,0" IsChecked="{Binding MusicManager.IsLoopEnabled}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Foreground}" Data="{StaticResource VectorRepeat}"/>
                            </Viewbox>
                        </Grid>
                    </ToggleButton>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="20,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrackPosition,Converter={StaticResource FormatTimespan}}"/>
                    <TextBlock Text="/" Margin="10,0,10,0"/>
                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrackLength,Converter={StaticResource FormatTimespan}}"/>
                </StackPanel>
                <DockPanel HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0">
                    <DockPanel.Resources>
                        <converter:VolumeToImage x:Key="VolumeToImage"/>
                    </DockPanel.Resources>
                    <Image Source="{Binding ElementName=volumeslider,Path=Value,Converter={StaticResource VolumeToImage}}" Width="24" Height="24">
                        <Image.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding ToggleVolume}"/>
                        </Image.InputBindings>
                    </Image>
                    <Slider x:Name="volumeslider" Maximum="1" Minimum="0" IsMoveToPointEnabled="True" Style="{StaticResource AdvancedTimelineSlider}" VerticalAlignment="Center" LargeChange="0.1" Value="{Binding MusicManager.CSCoreEngine.Volume}" extensions:SliderExtensions.MoveToPointOnDrag="True"/>
                </DockPanel>
            </Grid>
        </Grid>
        <Button Background="{StaticResource NormalColorBrush}" Visibility="{Binding Updater.UpdateFound,Converter={StaticResource BooleanToVisibilityConverter}}" Height="30" Command="{Binding OpenUpdater}" Margin="10,40,15,10" Grid.RowSpan="2" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Button.Resources>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
            </Button.Resources>

            <TextBlock Text="{DynamicResource NewUpdateAvailable}" Foreground="White"/>
        </Button>
    </Grid>
</UserControl>
